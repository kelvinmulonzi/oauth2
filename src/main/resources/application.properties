spring.application.name=OAuth2-Server

# Server
server.port=9000
server.servlet.context-path=/auth

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/authserver
spring.datasource.username=root
spring.datasource.password=pass123
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# OAuth2 Authorization Server
spring.security.oauth2.authorizationserver.client.registration.client.client-id=client
spring.security.oauth2.authorizationserver.client.registration.client.client-secret=secret
spring.security.oauth2.authorizationserver.client.registration.client.client-authentication-methods=client_secret_basic,client_secret_post
spring.security.oauth2.authorizationserver.client.registration.client.authorization-grant-types=authorization_code,refresh_token
spring.security.oauth2.authorizationserver.client.registration.client.redirect-uris=http://127.0.0.1:8080/login/oauth2/code/client
spring.security.oauth2.authorizationserver.client.registration.client.scopes=openid,profile,email
spring.security.oauth2.authorizationserver.client.registration.client.require-authorization-consent=true

# JWT Settings
spring.security.oauth2.authorizationserver.jwt.issuer-uri=http://localhost:9000/auth

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
